/* ——————————————————————————————*                                                                                       *   THE BOOK CALCULATOR - MARGINS  CALCULATOR                     *   V 1.0*   by LAURENT DOUCET**   www.thebookcalculator.com — www.laurentdoucet.be** ——————————————————————————————*/ var win = new Window ("dialog","MARGINS CALCULATOR");  win.orientation = "column";//var myInputGroup = win.add ("panel {orientation: 'column'}");    myInputGroup.margins = [20,20,40,20];    myInputGroup.alignChildren = "left";      //    myInputGroup.Fine = myInputGroup.add ("radiobutton", undefined, "Fine print");          myInputGroup.Fine.helpTip='"Fine print" canon of page construction.';    myInputGroup.Regular = myInputGroup.add ("radiobutton", undefined, "Regular");        myInputGroup.Regular.helpTip='"Regular print" canon of page construction.';    //    myInputGroup.Divide6 = myInputGroup.add ("radiobutton", undefined, "Divide by 6");         myInputGroup.Divide6.helpTip='Margins will be set to 1/6 of the page width / height.';    myInputGroup.Divide9 = myInputGroup.add ("radiobutton", undefined, "Divide by 9");          myInputGroup.Divide9.helpTip='Van de Graaf canon of page construction. Margins will be set to 1/9 of the page width / height.';    myInputGroup.Divide12 = myInputGroup.add ("radiobutton", undefined, "Divide by 12");         myInputGroup.Divide12.helpTip='Margins will be set to 1/12 of the page width / height.';    //var myButtonGroup = win.add ("group");     myButtonGroup.orientation = "row";     //    myButtonGroup.cancelBtn = myButtonGroup.add("button", undefined, "Cancel");        myButtonGroup.quitBtn = myButtonGroup.add("button", undefined, "OK");        //    myButtonGroup.defaultElement = myButtonGroup.quitBtn;        myButtonGroup.cancelElement = myButtonGroup.cancelBtn;      //win.add ('statictext {text: "www.thebookcalculator.com", characters: 30, justify: "center"}');win.add ('statictext {text: "V 1.0 | Laurent Doucet", characters: 30, justify: "center"}');////if (win.show() == 1){   if (myInputGroup.Fine.value == true)           {          var            doc = app.activeDocument,            allPagesMaPref = doc.pages.everyItem().marginPreferences,            curPageMaPref;                    while ( curPageMaPref = allPagesMaPref.pop() )            with (curPageMaPref) {            columnCount = 1;            columnGutter = 0;            top = ((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/3)*2))/10)*5)*100)/100),            // right=outside          bottom= ((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/3)*2))/10)*7)*100)/100),          left=((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/3)*2))/10)*4)*100)/100),           // left=inside          right= ((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/3)*2))/10)*6)*100)/100)          }  };   if (myInputGroup.Regular.value == true)           {          var            doc = app.activeDocument,            allPagesMaPref = doc.pages.everyItem().marginPreferences,            curPageMaPref;                    while ( curPageMaPref = allPagesMaPref.pop() )            with (curPageMaPref) {            columnCount = 1;            columnGutter = 0;            top = ((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/4)*3))/10)*5)*100)/100),            // right=outside          bottom= ((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/4)*3))/10)*7)*100)/100),          left=((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/4)*3))/10)*4)*100)/100),           // left=inside          right= ((((((doc.documentPreferences.pageWidth)-(((doc.documentPreferences.pageWidth)/4)*3))/10)*6)*100)/100)          }  };   if (myInputGroup.Divide6.value == true)           {          var            doc = app.activeDocument,            allPagesMaPref = doc.pages.everyItem().marginPreferences,            curPageMaPref;                    while ( curPageMaPref = allPagesMaPref.pop() )            with (curPageMaPref) {            columnCount = 1;            columnGutter = 0;            top = ((((doc.documentPreferences.pageHeight)/6)*100)/100),            // right=outside          bottom= (((2*(doc.documentPreferences.pageHeight)/6)*100)/100),          left=((((doc.documentPreferences.pageWidth)/6)*100)/100),           // left=inside          right= (((2*(doc.documentPreferences.pageWidth)/6)*100)/100)          }  };   if (myInputGroup.Divide9.value == true)           {          var            doc = app.activeDocument,            allPagesMaPref = doc.pages.everyItem().marginPreferences,            curPageMaPref;                    while ( curPageMaPref = allPagesMaPref.pop() )            with (curPageMaPref) {            columnCount = 1;            columnGutter = 0;            top = ((((doc.documentPreferences.pageHeight)/9)*100)/100),            // right=outside          bottom= (((2*(doc.documentPreferences.pageHeight)/9)*100)/100),          left=((((doc.documentPreferences.pageWidth)/9)*100)/100),           // left=inside          right= (((2*(doc.documentPreferences.pageWidth)/9)*100)/100)          }  }; if (myInputGroup.Divide12.value == true)           {          var            doc = app.activeDocument,            allPagesMaPref = doc.pages.everyItem().marginPreferences,            curPageMaPref;                    while ( curPageMaPref = allPagesMaPref.pop() )            with (curPageMaPref) {            columnCount = 1;            columnGutter = 0;            top = ((((doc.documentPreferences.pageHeight)/12)*100)/100),            // right=outside          bottom= (((2*(doc.documentPreferences.pageHeight)/12)*100)/100),          left=((((doc.documentPreferences.pageWidth)/12)*100)/100),           // left=inside          right= (((2*(doc.documentPreferences.pageWidth)/12)*100)/100)          }  };  }  